{"version":3,"file":"index.js","sources":["../src/actions/SortAction.ts","../src/actions/FetchSelectorAction.ts","../src/utils.ts","../src/index.ts"],"sourcesContent":["import type { ISortAction, IUmbracoContentDeliveryApi } from '../../interfaces';\r\n\r\nexport class SortAction implements ISortAction {\r\n  private baseQuery: IUmbracoContentDeliveryApi;\r\n  private field: string;\r\n\r\n  constructor(baseQuery: IUmbracoContentDeliveryApi, field: string) {\r\n    this.baseQuery = baseQuery;\r\n    this.field = field;\r\n  }\r\n\r\n  ascending(): IUmbracoContentDeliveryApi {\r\n    this.baseQuery.addSort(this.field, 'asc');\r\n    return this.baseQuery;\r\n  }\r\n\r\n  descending(): IUmbracoContentDeliveryApi {\r\n    this.baseQuery.addSort(this.field, 'desc');\r\n    return this.baseQuery;\r\n  }\r\n}\r\n","import type { IUmbracoContentDeliveryApi } from '../../interfaces/IUmbracoContentDeliveryApi';\r\nimport type { IFetchSelectorAction } from '../../interfaces/IFetchSelectorAction';\r\n\r\nexport class FetchSelectorAction implements IFetchSelectorAction {\r\n  private selector: 'ancestors' | 'children' | 'descendants';\r\n  private baseQuery: IUmbracoContentDeliveryApi;\r\n\r\n  constructor(\r\n    baseQuery: IUmbracoContentDeliveryApi,\r\n    selector: 'ancestors' | 'children' | 'descendants'\r\n  ) {\r\n    this.baseQuery = baseQuery;\r\n    this.selector = selector;\r\n  }\r\n\r\n  byId(id: string): IUmbracoContentDeliveryApi {\r\n    // if ID is not a guid, throw error\r\n    if (!id.match(/^[a-f\\d]{8}(-[a-f\\d]{4}){4}[a-f\\d]{8}$/i)) {\r\n      throw new Error('ID must be a guid');\r\n    }\r\n    this.baseQuery.addFetch(this.selector, id);\r\n    return this.baseQuery;\r\n  }\r\n\r\n  byPath(path: string): IUmbracoContentDeliveryApi {\r\n    // check path is not a guid\r\n    if (path.match(/^[a-f\\d]{8}(-[a-f\\d]{4}){4}[a-f\\d]{8}$/i)) {\r\n      throw new Error('Path cannot be a guid');\r\n    }\r\n    // if path starts with a / remove it\r\n    if (path.startsWith('/')) {\r\n      path = path.slice(1);\r\n    }\r\n    this.baseQuery.addFetch(this.selector, path);\r\n    return this.baseQuery;\r\n  }\r\n}\r\n","export function toQueryString(queryParams: { [key: string]: string | string[] } = {}) {\r\n    const parts: string[] = [];\r\n    for (const key in queryParams) {\r\n      if (Array.isArray(queryParams[key])) {\r\n        parts.push(\r\n          ...(queryParams[key] as string[]).map((value) => `${key}=${value}`),\r\n        );\r\n      } else if (queryParams[key] !== undefined) {\r\n        parts.push(`${key}=${queryParams[key]}`);\r\n      }\r\n    }\r\n    return parts.length ? `?${parts.join('&')}` : '';\r\n  }","import axios from 'axios';\n\nimport type { IUmbracoContentDeliveryApi, IUmbracoContentDeliveryApiItem, IFetchSelectorAction, ISortAction } from '../interfaces/';\nimport { SortAction, FetchSelectorAction } from './actions';\nimport { toQueryString } from './utils';\n\n\nexport class UmbracoContentDeliveryApi implements IUmbracoContentDeliveryApi {\n  public baseURL: string;\n  public endpoint: string;\n  public queryParams: any;\n\n  constructor(baseURL: string, endpoint: string | null = null) {\n    this.baseURL = baseURL;\n    this.endpoint = endpoint ?? '/umbraco/delivery/api/v1/content';\n    this.queryParams = {};\n  }\n\n  fetch(\n    selector: 'ancestors' | 'children' | 'descendants',\n  ): IFetchSelectorAction {\n    return new FetchSelectorAction(this, selector);\n  }\n\n  addFetch(\n    selector: 'ancestors' | 'children' | 'descendants',\n    id: string,\n  ): IUmbracoContentDeliveryApi {\n    this.queryParams.fetch = `${selector}:${id}`;\n    return this;\n  }\n\n  //================================================================================================\n  // FILTERING\n  //================================================================================================\n  withContentType(value: string): IUmbracoContentDeliveryApi {\n    return this.addFilter('contentType', value, false);\n  }\n\n  withName(name: string): IUmbracoContentDeliveryApi {\n    return this.addFilter('name', name, false);\n  }\n\n  withoutContentType(value: string): IUmbracoContentDeliveryApi {\n    return this.addFilter('contentType', value, true);\n  }\n\n  withoutName(name: string): IUmbracoContentDeliveryApi {\n    return this.addFilter('name', name, true);\n  }\n\n  addFilter(\n    type: 'contentType' | 'name',\n    value: string,\n    negate: boolean,\n  ): IUmbracoContentDeliveryApi {\n    const filterValue = negate ? `!${value}` : value;\n    this.queryParams.filter = this.queryParams.filter\n      ? [...this.queryParams.filter, `${type}:${filterValue}`]\n      : [`${type}:${filterValue}`];\n    return this;\n  }\n\n  //================================================================================================\n  // SORTING\n  //================================================================================================\n  sortByName(): ISortAction {\n    return new SortAction(this, 'name');\n  }\n\n  sortByCreateDate(): ISortAction {\n    return new SortAction(this, 'createDate');\n  }\n\n  sortByLevel(): ISortAction {\n    return new SortAction(this, 'level');\n  }\n\n  sortBySortOrder(): ISortAction {\n    return new SortAction(this, 'sortOrder');\n  }\n\n  sortByUpdateDate(): ISortAction {\n    return new SortAction(this, 'updateDate');\n  }\n\n  addSort(field: string, order: 'asc' | 'desc'): IUmbracoContentDeliveryApi {\n    this.queryParams.sort = this.queryParams.sort\n      ? [...this.queryParams.sort, `${field}:${order}`]\n      : [`${field}:${order}`];\n    return this;\n  }\n\n  //================================================================================================\n  // PAGING\n  //================================================================================================\n  skip(count: number): IUmbracoContentDeliveryApi {\n    this.queryParams.skip = count;\n    return this;\n  }\n\n  take(count: number): IUmbracoContentDeliveryApi {\n    this.queryParams.take = count;\n    return this;\n  }\n\n  //================================================================================================\n  // EXPANDING\n  //================================================================================================\n  expandProperty(...propertyAliases: string[]): IUmbracoContentDeliveryApi {\n    this.queryParams.expand = `property:${propertyAliases.join(',')}`;\n    return this;\n  }\n  expandAll(): IUmbracoContentDeliveryApi {\n    this.queryParams.expand = 'all';\n    return this;\n  }\n\n  item(): IUmbracoContentDeliveryApiItem {\n    return new UmbracoContentDeliveryApiItem(this.baseURL, this.endpoint);\n  }\n\n  get() {\n    const url = `${this.baseURL}${this.endpoint}${toQueryString(\n      this.queryParams,\n    )}`;\n    return axios\n      .get(url)\n      .then((response) => response.data)\n      .catch((error) => error);\n  }\n\n  /**\n   * Returns the query string representation of the current set of query parameters.\n   * @returns A string representing the query parameters.\n   */\n  getQueryString(): string {\n    return toQueryString(this.queryParams);\n  }\n}\n\nexport class UmbracoContentDeliveryApiItem\n  implements IUmbracoContentDeliveryApiItem {\n  private baseURL: string;\n  private endpoint: string;\n  private queryParams: any;\n\n  constructor(baseURL: string, endpoint: string | null = null) {\n    this.baseURL = baseURL;\n    this.endpoint = endpoint ?? '/umbraco/delivery/api/v1/content';\n    this.queryParams = {};\n  }\n\n  expandProperty(...propertyAliases: string[]): IUmbracoContentDeliveryApiItem {\n    this.queryParams.expand = `property:${propertyAliases.join(',')}`;\n    return this;\n  }\n  expandAll(): IUmbracoContentDeliveryApiItem {\n    this.queryParams.expand = 'all';\n    return this;\n  }\n\n  byId(...id: string[]): IUmbracoContentDeliveryApiItem {\n    this.endpoint = `/umbraco/delivery/api/v1/content/item/${id}`;\n    return this as unknown as IUmbracoContentDeliveryApiItem;\n  }\n\n  byPath(path: string): IUmbracoContentDeliveryApiItem {\n    if (path.match(/^[a-f\\d]{8}(-[a-f\\d]{4}){4}[a-f\\d]{8}$/i)) {\n      throw new Error('Path cannot be a guid');\n    }\n    this.endpoint = `/umbraco/delivery/api/v1/content/item/${path}`;\n    return this as unknown as IUmbracoContentDeliveryApiItem;\n  }\n\n  get() {\n    const url = `${this.baseURL}${this.endpoint}${toQueryString(\n      this.queryParams,\n    )}`;\n    return axios\n      .get(url)\n      .then((response) => response.data)\n      .catch((error) => error);\n  }\n\n  getURL() {\n    return `${this.baseURL}${this.endpoint}${toQueryString(this.queryParams)}`;\n  }\n}\n"],"names":[],"mappings":"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"}